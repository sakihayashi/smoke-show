[{"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/index.js":"1","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/reportWebVitals.js":"2","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/App.js":"3","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/aws-exports.js":"4","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/store/reducers/rootReducer.js":"5","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/InfluencerIndexPage.js":"6","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/HomePage.js":"7","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/AboutPage.js":"8","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/EmailConfirmation.js":"9","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/NotFoundPage.js":"10","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/ResetPassword.js":"11","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/CarStats.js":"12","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Swagg.js":"13","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Influencer/BioPage.js":"14","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Fan/BioPage.js":"15","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/CarSearch.js":"16","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Giveaways.js":"17","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/store/reducers/authReducer.js":"18","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/store/reducers/userReducer.js":"19","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/commentsTempData.js":"20","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/carTempData.js":"21","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Comments.js":"22","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Layout/Layout.js":"23","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/giveAwayData.js":"24","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/utils/youtubeAPI.js":"25","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Fan/vehicleCard.js":"26","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Fan/CreateNewCar.js":"27","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Layout/Header.js":"28","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Layout/Footer.js":"29","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Fan/SettingModal.js":"30","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Layout/SignUpModal.js":"31","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Layout/LoginModal.js":"32","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/store/actions/userActions.js":"33","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/store/actions/authActions.js":"34","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Shopify/Cart.js":"35","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Shopify/Products.js":"36","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Shopify/Product.js":"37","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Shopify/LineItem.js":"38","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Shopify/VariantSelector.js":"39","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Fan/ImageUpload.js":"40","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Influencer/Garage.js":"41","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Influencer/CreateNewCar.js":"42","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Influencer/ImageUpload.js":"43","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Influencer/SettingModal.js":"44","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Influencer/vehicleCard.js":"45","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Influencer/SubNav.js":"46","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Influencer/Social.js":"47","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Influencer/Swagg.js":"48","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/store/actions/bioActions.js":"49","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/store/reducers/bioReducer.js":"50","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Admin/QueryVideoData.js":"51","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Admin/EditVideoData.js":"52"},{"size":1122,"mtime":1612536438995,"results":"53","hashOfConfig":"54"},{"size":362,"mtime":1604942454463,"results":"55","hashOfConfig":"54"},{"size":2443,"mtime":1613248703367,"results":"56","hashOfConfig":"54"},{"size":1074,"mtime":1611365886225,"results":"57","hashOfConfig":"54"},{"size":427,"mtime":1613150008225,"results":"58","hashOfConfig":"54"},{"size":5313,"mtime":1613173503504,"results":"59","hashOfConfig":"54"},{"size":13880,"mtime":1613178012762,"results":"60","hashOfConfig":"54"},{"size":2385,"mtime":1612530430856,"results":"61","hashOfConfig":"54"},{"size":7867,"mtime":1613136143998,"results":"62","hashOfConfig":"54"},{"size":873,"mtime":1612402277036,"results":"63","hashOfConfig":"54"},{"size":6983,"mtime":1612898401560,"results":"64","hashOfConfig":"54"},{"size":16040,"mtime":1612560206712,"results":"65","hashOfConfig":"54"},{"size":3606,"mtime":1612402283053,"results":"66","hashOfConfig":"54"},{"size":11147,"mtime":1613073953250,"results":"67","hashOfConfig":"54"},{"size":20203,"mtime":1613173103692,"results":"68","hashOfConfig":"54"},{"size":10527,"mtime":1613173497068,"results":"69","hashOfConfig":"54"},{"size":7536,"mtime":1612873177870,"results":"70","hashOfConfig":"54"},{"size":882,"mtime":1613169247024,"results":"71","hashOfConfig":"54"},{"size":538,"mtime":1613167344613,"results":"72","hashOfConfig":"54"},{"size":1018,"mtime":1605734313167,"results":"73","hashOfConfig":"54"},{"size":30355,"mtime":1608082226445,"results":"74","hashOfConfig":"54"},{"size":9352,"mtime":1613171629755,"results":"75","hashOfConfig":"54"},{"size":2255,"mtime":1613145683966,"results":"76","hashOfConfig":"54"},{"size":1595,"mtime":1609789938707,"results":"77","hashOfConfig":"54"},{"size":357,"mtime":1613243966867,"results":"78","hashOfConfig":"54"},{"size":9675,"mtime":1613061893902,"results":"79","hashOfConfig":"54"},{"size":12404,"mtime":1613173194851,"results":"80","hashOfConfig":"54"},{"size":5900,"mtime":1613175129902,"results":"81","hashOfConfig":"54"},{"size":373,"mtime":1610140072353,"results":"82","hashOfConfig":"54"},{"size":24577,"mtime":1613173465747,"results":"83","hashOfConfig":"54"},{"size":5672,"mtime":1613083728929,"results":"84","hashOfConfig":"54"},{"size":9119,"mtime":1613247318551,"results":"85","hashOfConfig":"54"},{"size":815,"mtime":1613157186096,"results":"86","hashOfConfig":"54"},{"size":1710,"mtime":1613169282060,"results":"87","hashOfConfig":"54"},{"size":2130,"mtime":1610065399614,"results":"88","hashOfConfig":"54"},{"size":613,"mtime":1610055684017,"results":"89","hashOfConfig":"54"},{"size":4052,"mtime":1610152774195,"results":"90","hashOfConfig":"54"},{"size":2086,"mtime":1596835430000,"results":"91","hashOfConfig":"54"},{"size":546,"mtime":1596835430000,"results":"92","hashOfConfig":"54"},{"size":3624,"mtime":1612401950074,"results":"93","hashOfConfig":"54"},{"size":20719,"mtime":1613172821211,"results":"94","hashOfConfig":"54"},{"size":12223,"mtime":1613173532028,"results":"95","hashOfConfig":"54"},{"size":3624,"mtime":1612401950074,"results":"96","hashOfConfig":"54"},{"size":24274,"mtime":1613173661329,"results":"97","hashOfConfig":"54"},{"size":9688,"mtime":1613010947960,"results":"98","hashOfConfig":"54"},{"size":4729,"mtime":1613173689577,"results":"99","hashOfConfig":"54"},{"size":5466,"mtime":1613073972632,"results":"100","hashOfConfig":"54"},{"size":3916,"mtime":1613073979610,"results":"101","hashOfConfig":"54"},{"size":126,"mtime":1613149275145,"results":"102","hashOfConfig":"54"},{"size":297,"mtime":1613151744775,"results":"103","hashOfConfig":"54"},{"size":2037,"mtime":1613244091760,"results":"104","hashOfConfig":"54"},{"size":7447,"mtime":1613253185207,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"1fkg0if",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"108"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"108"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"108"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"108"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"108"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"108"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"108"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"108"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"108"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"108"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"108"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/index.js",[],["221","222"],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/reportWebVitals.js",[],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/App.js",["223"],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/aws-exports.js",[],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/store/reducers/rootReducer.js",[],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/InfluencerIndexPage.js",["224"],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/HomePage.js",["225"],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/AboutPage.js",[],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/EmailConfirmation.js",["226"],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/NotFoundPage.js",[],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/ResetPassword.js",["227","228"],"import React, { useState, useEffect, useRef } from 'react'\nimport { Button, Form } from 'react-bootstrap'\n// import Logo from '../assets/global/Logo-smoke-show.png'\nimport * as Realm from \"realm-web\"\nimport { connect } from 'react-redux'\nimport jwt from 'jsonwebtoken'\nimport Layout from './Layout/Layout'\n\n// http://localhost:3000/reset-password?token=a13bd84a8417b512344a3b6c6368d531048b3b8f5da61189c760dd5e43324097e56f8347c7540fe61ea9f090516223e3df94116aa32212ebebc6022aaa34d788&tokenId=601f01fd96554f5bcb2dd04d\n\nconst ResetPassword = (props) =>{\n\n    const childRef = useRef()\n    const token = new URLSearchParams(props.location.search).get(\"token\")\n    const tokenId = new URLSearchParams(props.location.search).get(\"tokenId\")\n    console.log(token)\n    console.log(tokenId)\n    const [userObj, setUserObj] = useState({token: token, tokenId: tokenId, email: '', password: '', password2: ''})\n    const [hasError, setHasError] = useState(false)\n    const [hasReset, setHasReset] = useState(false)\n    const [msg, setMsg] = useState(\"\")\n    const maxAgeTest = 1 * 60 * 60\n    const id = process.env.REACT_APP_REALM_APP_ID\n    const config = { id };\n    const app = new Realm.App(config);\n\n\n    const handleChange =(e) =>{\n        setUserObj({\n            ...userObj,\n            [e.target.name]: e.target.value\n        })\n    }\n    const createToken = (userData) =>{\n        return jwt.sign({ userData: userData }, process.env.REACT_APP_JWT_SECRET, {expiresIn: maxAgeTest});\n    }\n    const handeleRestPw = async (e) =>{\n        console.log('pw', token, tokenId, userObj.password)\n        e.preventDefault()\n        try{\n            // await app.emailPasswordAuth.resetPassword(\"newPassw0rd\", token, tokenId);\n            // await app.emailPasswordAuth.resetPassword(token, tokenId, \"newPassw0rd\");\n            await app.emailPasswordAuth.resetPassword( token, tokenId, userObj.password).then(res =>{\n                console.log('res', res)\n                setHasReset(true)\n            })\n        }catch(error){\n            console.log(error)\n        }\n        \n    }\n    const handleLogin = async (e) =>{\n        e.preventDefault()\n        const emailLowerCase = userObj.email.toLocaleLowerCase()\n        const credentials = Realm.Credentials.emailPassword(emailLowerCase, userObj.password)\n\n        try{\n            // Authenticate the user\n            await app.logIn(credentials).then(async user=>{\n                    console.log('working?', user)\n                    // const key = await user.apiKeys.create(uid)\n                    const mongo = user.mongoClient(process.env.REACT_APP_REALM_SERVICE_NAME);\n                    const mongoCollection = mongo.db(\"smoke-show\").collection(\"users\");\n                    let token = ''\n                    const queryFilter = { userId: user.id };\n                    await mongoCollection.findOne(queryFilter).then(loginUserData =>{  \n                        const oldToken = sessionStorage.getItem('session_token')\n                        loginUserData.login = userObj\n                        token = createToken(loginUserData)\n                        if(oldToken){\n                            sessionStorage.removeItem('session_token')\n                            sessionStorage.setItem('session_token', token)\n                        }else{\n                            sessionStorage.setItem('session_token', token)\n                        }\n                        \n                        \n                        \n                    }).then(()=>{props.history.push(\"/\")})\n                    \n                    \n                });\n            \n      \n        }catch(error){\n            console.log('error', error)\n\n        }\n    }\n    useEffect(() => {\n        \n    }, [])\n\n    return (\n        <Layout ref={childRef}>\n            <div className=\"custom-modal-body theme-text-p height-adj-main\">\n                <div style={{marginTop:'4rem'}}></div>\n                {hasReset ? \n                <React.Fragment>\n                    <div style={{textAlign:\"center\"}}>\n                        <h4>Your password has been reset</h4><br/>\n                        <p> Login with your new password.</p>\n                    </div>\n                    <div className=\"spacer-4rem\"></div>\n                    <Form className=\"login-form\" onSubmit={handleLogin}>\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>Email address</Form.Label>\n                            <Form.Control type=\"email\" placeholder=\"e.g. example@example.com\" name=\"email\" onChange={handleChange} />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"password\" placeholder=\"\" name=\"password\" onChange={handleChange} />\n                        </Form.Group>\n                        <div className=\"spacer-2rem\"></div>\n                        <div className=\"login-btn-wrapper\">\n                            <Button className=\"login-btn\" type=\"submit\">\n                                Login\n                            </Button><br /><br />\n                            \n                        </div>\n                    \n                    </Form>\n                </React.Fragment>\n                :\n                <React.Fragment>\n                    <div className=\"login-logo-wrapper theme-text-p\">\n                        <h4 className=\"h4-style\">Reset Your Password</h4>\n                        <div className=\"spacer-4rem\"></div>\n                        <p>Please enter your new password below</p>\n                    </div>\n                    <Form className=\"login-form\" onSubmit={handeleRestPw}>\n         \n                        <Form.Group >\n                            <Form.Label>New password</Form.Label>\n                            <Form.Control type=\"password\" placeholder=\"Between 6 and 128 characters long\" name=\"password\" onChange={handleChange} />\n                        </Form.Group>\n                        <br/>\n                        {/* <Form.Group >\n                            <Form.Label>Confirm new password</Form.Label>\n                            <Form.Control type=\"password\" placeholder=\"type your new password again\" name=\"password2\" onChange={handleChange} />\n                        </Form.Group> */}\n                        {hasError && <div className=\"error-msg\">{msg}</div>}\n                        <br/>\n                        <div className=\"login-btn-wrapper\">\n                            <Button className=\"login-btn\" type=\"submit\">\n                                Set New Password\n                            </Button>\n                        </div>\n                        <div className=\"spacer-4rem\"></div>\n                    </Form>\n                </React.Fragment>\n                }\n            </div>\n        </Layout>\n        \n    )\n}\n\nexport default connect()(ResetPassword)\n\n\n","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/CarStats.js",["229","230","231","232","233"],"import React, { useState, Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport Layout from './Layout/Layout'\nimport { Row, Col, Button} from 'react-bootstrap'\nimport './carStats.scss'\nimport { v4 as uuidv4 } from 'uuid'\nimport axios from 'axios';\n\nimport priceIcon from '../assets/global/Price-Tag-icon.svg'\nimport powerIcon from '../assets/global/Horsepower.svg'\nimport weightIcon from '../assets/global/weight.svg'\nimport pistonIcon from '../assets/global/piston.png'\n// import cylinderIcon from '../assets/global/cylinder.svg'\nimport transmissionIcon from '../assets/global/transmission.svg'\nimport driveIcon from '../assets/global/drive_icon.svg'\nimport mileageIcon from '../assets/global/mileage.svg'\nimport torqueIcon from '../assets/global/torque.png'\nimport frontWheels from '../assets/global/front-wheels.png'\nimport rearWheels from '../assets/global/rear-wheels.png'\nimport allWheels from '../assets/global/all-wheels.png'\n\nconst CarStats = (props) =>{\n    const statsArr = ['Main Stats', 'Engine', 'Measurements', 'Comfort & Convenience', 'Drive Train', 'Suspension', 'Color', 'Warranty']\n    const [carImages, setCarImages] = useState([])\n    \n    const [activeTab, setActiveTab] = useState('Main Stats')\n    let searchedCars = []\n    if(props.history.location.cars){\n        searchedCars = props.history.location.cars.map(item => ({...item, tabs: statsArr, activeTab: 'Main Stats'}))\n    }else{props.history.push('/car-search')}\n    \n    const [carData, setCarData] = useState(searchedCars)\n    \n    const handleTabClick = (tab, index) =>{\n        let tempCarArr = [...carData]\n       \n       tempCarArr[index].activeTab = tab\n       setCarData(tempCarArr)\n    }\n    \n\n    const switchTabs = (car, tab) =>{\n        let engine, warranty, measurements, comfort, drivetrain, suspension, mileage, weight, totalSeating, colors, baseMSRP, rearseats, driveIcon, driveType\n\n        if(car.features['Engine'] !== undefined) engine = car.features['Engine']\n        if(car.features['Warranty'] !== undefined) warranty = car.features['Warranty']\n        if(car.features['Measurements'] !== undefined) measurements = car.features['Measurements']\n        if(car.features['Measurements'] !== undefined) weight = car.features['Measurements']['Curb weight']\n        if(car.features['Comfort & Convenience'] !== undefined) comfort = car.features['Comfort & Convenience']\n        if(car.features['Drive Train'] !== undefined){\n            drivetrain = car.features['Drive Train']\n            driveType = drivetrain['Drive type']\n        } \n        if(driveType === undefined){\n            driveType = null\n        }else if(driveType === 'all wheel drive' || drivetrain['Drive type'] === 'four wheel drive'){\n            driveIcon = allWheels\n        }else if(driveType === 'front wheel drive'){\n            driveIcon = frontWheels\n        }else if(driveType === 'rear wheel drive'){\n            driveIcon = rearWheels\n        }else{driveIcon = allWheels}\n\n        if(car.features['Suspension'] !== undefined) suspension = car.features['Suspension']\n        if(car.features['Rearseats'] !== undefined) rearseats = car.features['Rearseats'] \n        if(car.features['Fuel']['EPA mileage est'] == undefined) {\n            console.log('no mileage')\n        }else{mileage = car.features['Fuel']['EPA mileage est'][' (cty/hwy)']}\n        if(car.totalSeating !== undefined) totalSeating = car.totalSeating\n        if(car.color !== undefined) colors = car.color\n     \n        if(car.price === undefined){\n            baseMSRP = null\n        }else if(car.price.baseMSRP === undefined){\n            baseMSRP = null\n        }else{\n            baseMSRP = car.price.baseMSRP.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        }\n\n        \n        switch(tab) {\n            case 'Main Stats':\n              return <Fragment>\n                        {baseMSRP &&\n                        <div className=\"stats-box\">\n                        <div  className=\"xs-txt\">\n                            <img src={priceIcon} alt=\"price\" className=\"icon-stats\" />\n                            <div>MSRP</div>\n                        </div>\n                        <div className=\"stats-label\">\n                            ${' '} {baseMSRP}\n                        </div>\n                        \n                        </div>}\n\n                        {weight &&\n                        <div className=\"stats-box\">\n                            <div className=\"xs-txt\">\n                                <img src={weightIcon} alt=\"weight\" className=\"icon-stats\" />\n                                <div>Curb weight</div>\n                            </div>\n                            <div className=\"stats-label\">\n                                {weight.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n                            </div>\n                        </div>\n                        }\n                        {mileage &&\n                        <div className=\"stats-box\">\n                            <div className=\"xs-txt\">\n                                <img src={mileageIcon} alt=\"mileage\" className=\"icon-stats\" />\n                                <div>Mileage</div>\n                            </div>\n                            <div className=\"stats-label\">\n                                {mileage}\n                            </div>\n                        </div>\n                        }\n                        \n                        {drivetrain &&\n                        <div className=\"stats-box\">\n                            <div className=\"xs-txt\">\n                                <img src={transmissionIcon} alt=\"transmission\" className=\"icon-stats\" />\n                                <div>Transmission</div>\n                            </div>\n                            <div className=\"stats-label\">\n                                {drivetrain['Transmission']}\n                            </div>\n                        </div>\n                        }\n                        {driveType &&\n                        <div className=\"stats-box\">\n                            <div className=\"xs-txt\">\n                                <img src={driveIcon} alt=\"drive\" className=\"icon-stats\" />\n                                <div>Drive type</div>\n                            </div>\n                            <div className=\"stats-label\">\n                                {driveType}\n                            </div>\n                        </div>\n                        }\n                        {car.features.Engine.Torque && \n                        <div className=\"stats-box\">\n                            <div className=\"xs-txt\">\n                                <img src={torqueIcon} alt=\"torque\" className=\"icon-stats\" />\n                                Torque\n                            </div>\n                            <div className=\"stats-label\">\n                                { car.features.Engine.Torque }\n                            </div>\n                        </div>\n                        }\n                        {car.features.Engine.Horsepower &&\n                        <div className=\"stats-box\">\n                            <div className=\"xs-txt\">\n                                <img src={powerIcon} alt=\"hoursepower\" className=\"icon-stats\" />\n                                Horsepower\n                            </div>\n                            <div className=\"stats-label\">\n                                { car.features.Engine.Horsepower}\n                            </div>\n                        </div>\n                        }\n                        {car.features.Engine.Cylinders &&\n                        <div className=\"stats-box\">\n                            <div className=\"xs-txt\">\n                                <img src={pistonIcon} alt=\"Cylinders\" className=\"icon-stats\" />\n                                Cylinders\n                            </div>\n                            <div className=\"stats-label\">\n                                { car.features.Engine.Cylinders}\n                            </div>\n                            \n                        </div>\n                        }\n                    </Fragment>\n            case 'Engine':\n                return <Fragment>\n                        { engine && Object.entries(engine).map(([key, value]) =>{\n                            return <div className=\"stats-box\"><strong>{key}</strong>:  {value}</div>\n                        })}\n                      </Fragment>\n            case 'Warranty':\n                return <Fragment>\n                        {warranty && Object.entries(warranty).map(([key, value]) =>{\n                            return <div className=\"stats-box\"><strong>{key}</strong>:  {value}</div>\n                        })}\n                      </Fragment>\n            case 'Measurements':\n                return <Fragment>\n                        {totalSeating && \n                            <div className=\"stats-box\">Total Seating: {totalSeating}</div>\n                        }\n                        {rearseats && Object.entries(rearseats).map(([key, value]) =>{\n                            return <div className=\"stats-box\"><strong>{key}</strong>:  {value}</div>\n                        })\n                        }\n                        { measurements && Object.entries(measurements).map(([key, value]) =>{\n                            return <div className=\"stats-box\"><strong>{key}</strong>:  {value}</div>\n                        })}\n                          \n                     \n                      </Fragment>  \n            case 'Comfort & Convenience':\n                return <Fragment>\n                        { comfort && Object.keys(comfort).map((key, index)=>{\n                            return <div className=\"stats-box\">{key}</div>\n                        })}\n                          \n                       \n                      </Fragment> \n            case 'Drive Train':\n                return <Fragment>\n                        { drivetrain && Object.entries(drivetrain).map(([key, value]) =>{\n                            if(value === true){\n                                return <div className=\"stats-box\">{key}<strong></strong></div>\n                            }else{\n                                return <div className=\"stats-box\"><strong>{key}</strong>:  {value}</div>\n                            }\n                            \n                        })}\n                      </Fragment>\n            case 'Suspension':\n                return <Fragment>\n                        { suspension && Object.keys(suspension).map((key, index)=>{\n                            return <div className=\"stats-box\">{key}</div>\n                        })}\n                          \n                       \n                      </Fragment>    \n            case 'Color':\n                return <Fragment>\n                        <p><strong>Exterior</strong></p>\n                        { colors && colors['EXTERIOR'].map((color, index)=>{\n                            const uuid = uuidv4()\n                            return <Fragment>\n                                    <div className=\"stats-box-outline\" key={uuid}>\n                                    <div className=\"color-thumbnail\" style={{backgroundColor: `rgb(${color.rgb})`}}></div>\n                                    <div className=\"color-name\">{color.name}</div>\n                                    </div>\n                                   </Fragment>\n                        })}\n                          <hr />\n                       <p><strong>Interior</strong></p>\n                       { colors && colors['INTERIOR'].map((color, index)=>{\n                            return <div className=\"stats-box-outline\">\n                                    <div className=\"color-thumbnail\" style={{backgroundColor: `rgb(${color.rgb})`}}></div>\n                                    <div className=\"color-name\">{color.name}</div>\n                                    </div>\n                        })}\n                      </Fragment>  \n            default:\n              return <Fragment>\n                        <div className=\"stats-box\">Error</div>\n                    </Fragment>\n          }\n    }\n    const getImgData = async () =>{\n        const selected = props.history.location.selected\n        console.log('selected', selected)\n        const url = `https://api.carsxe.com/images?key=${process.env.REACT_APP_CARXE_API_KEY}&year=${selected.year}&make=${selected.make}&model=${selected.model}&format=json&angle=front`\n        await axios.get(url).then(res =>{\n            console.log('img data', res.data)\n            setCarImages(res.dataimages)\n            \n        })\n        \n    }\n    useEffect(() => {\n        \n        // getImgData()\n    }, [])\n    return(\n        <Layout>\n            <div className=\"main-wrapper stats-container\">\n                <div className=\"spacer-4rem\"></div>\n                {carData && carData.map((car, index) =>{\n                    car.tabs = statsArr\n                    const maker = car.make.toUpperCase()\n                    const model = car.model.toUpperCase()\n                    console.log('check', carImages)\n                    let carImg;\n                    if(carImages[0]){\n                        carImg = carImages[0].link\n                    }else{\n                        carImg = 'https://smoke-show.s3.amazonaws.com/car-photos/Ferrari-F8_Spider-2020-1280-01.jpg'\n                        }\n                    return(\n                        <Fragment key={car.name}>\n                            <h2 className=\"title\">{car.year} {' '} {maker} {' '} {model}</h2>\n                            <p className=\"theme-text-p\">{car.name}</p>\n                            <Row>\n                                <Col sm={4}>\n                                    {/* <img src=\"https://smoke-show.s3.amazonaws.com/car-photos/Ferrari-F8_Spider-2020-1280-01.jpg\" alt=\"Ferrari F8 spider\" style={{width: '100%'}}/> */}\n                                    <img src={carImg} alt={car.name} style={{width: '100%'}}/>\n                                </Col>\n                                <Col sm={8} style={{paddingLeft: 0}} >\n                                    <div className=\"box-shadow-white car-stats-wrapper\" >\n                                        <table className=\"stats-tab-ul\">\n                                        <tbody>\n                                            <tr>\n                                            {car.tabs.map(tab =>{\n                                                const uuid = uuidv4()\n                                                return(\n                                                        <td key={uuid} id={uuid} name={tab} custom={tab} onClick={()=>handleTabClick(tab, index)} className={ tab === car.activeTab ? 'tab-link tab-active' : 'tab-link' }>{tab}</td>                                       \n                                                )\n                                                \n                                            })}\n                                         \n                                            </tr>\n                                            </tbody>\n                                        </table>\n                                        <div className=\"stats-div\">\n                                            {switchTabs(car, car.activeTab)}\n                                        </div>\n                                    </div>\n                                </Col>\n                            </Row>\n                            <div className=\"spacer-4rem\"></div>\n                        </Fragment>\n                    )\n                })\n                }\n                <div className=\"spacer-4rem\"></div>\n                <Link to=\"/car-search\">\n                    <Button className=\"login-btn\">Start New Search</Button>\n                </Link>\n                \n            </div>\n            \n        </Layout>\n    )\n}\n\nexport default CarStats","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Swagg.js",["234"],"import React, { useEffect, useState } from 'react'\nimport {Helmet} from \"react-helmet\"\nimport Layout from './Layout/Layout'\nimport Client from 'shopify-buy';\nimport Products from './Shopify/Products'\nimport Cart from './Shopify/Cart'\nimport './Shopify/shopify.scss'\nimport Logo from '../assets/global/Logo-smoke-show.png'\n\nconst Swagg = () =>{\nconst [isCartOpen, setIsCartOpen] = useState(false)\nconst [checkout, setCheckout] = useState({ lineItems: [] })\nconst [products, setProducts] =useState([])\nconst [shop, setShop] = useState({})\n\nconst client = Client.buildClient({\n    storefrontAccessToken: process.env.REACT_APP_SHOPIFY_TOKEN,\n        domain: 'thehoongroup.myshopify.com',\n    });\n\nconst fetchData = () =>{\n    client.checkout.create().then((res) => {\n        console.log('cart', res)\n        setCheckout(res)\n      })\n\n      client.product.fetchAll().then((res) => {\n        console.log('product', res)\n        setProducts(res)\n      })\n  \n      client.shop.fetchInfo().then((res) => {\n        console.log('shop', res)\n        setShop(res)\n      });\n}\nconst addVariantToCart = async (variantId, quantity)=>{\n    setIsCartOpen(true)\n\n    const lineItemsToAdd = [{variantId, quantity: parseInt(quantity, 10)}]\n    // const checkoutId = checkout.id\n\n    return await client.checkout.addLineItems(checkout.id, lineItemsToAdd).then(res => {\n      console.log('res', res)\n      setCheckout(res)\n    });\n}\nconst updateQuantityInCart = async (lineItemId, quantity) =>{\n    // const checkoutId = checkout.id\n    const lineItemsToUpdate = [{id: lineItemId, quantity: parseInt(quantity, 10)}]\n\n    return await client.checkout.updateLineItems(checkout.id, lineItemsToUpdate).then(res => {\n        setCheckout(res)\n    });\n}\nconst removeLineItemInCart = async (lineItemId) =>{\n    return await client.checkout.removeLineItems(checkout.id, [lineItemId]).then(res => {\n        setCheckout(res)\n    });\n}\n\nconst handleCartClose = () =>{\n    setIsCartOpen(false)\n}\n\nuseEffect(() => {\n    fetchData()\n}, [])\n    return(\n        <Layout>\n        <Helmet>\n            <meta charSet=\"utf-8\" />\n            <title>Swagg | The Smoke Show</title>\n            <meta name=\"description\" content=\"Check out our swaggs here!\" />\n            <meta name=\"robots\" content=\"noindex, nofollow\" />\n            {/* <link rel=\"canonical\" href=\"http://mysite.com/example\" /> */}\n        </Helmet>\n            <div className=\"main-wrapper\">\n                <div className=\"spacer-4rem\"></div>\n                <h2 className=\"title\">Swagg</h2>\n                {/* <div className=\"swagg-wrapper\">\n                </div> */}\n                <div className=\"App\">\n        <div className=\"App__header\">\n          {!isCartOpen &&\n            <div className=\"App__view-cart-wrapper\">\n              <button className=\"App__view-cart\" onClick={()=> setIsCartOpen(true)}>Cart</button>\n            </div>\n          }\n          <div className=\"App__title\">\n            {/* <h1>{shop.name}</h1> */}\n            <img className=\"logo-header\" src={Logo} alt=\"The Smoke Show logo\"/>\n            <h2>{shop.description}</h2>\n          </div>\n        </div>\n        <div className=\"spacer-4rem\"></div>\n        <Products\n          products={products}\n          client={client}\n          addVariantToCart={addVariantToCart}\n        />\n        <Cart\n          checkout={checkout}\n          isCartOpen={isCartOpen}\n          handleCartClose={handleCartClose}\n          updateQuantityInCart={updateQuantityInCart}\n          removeLineItemInCart={removeLineItemInCart}\n        />\n      </div>\n            </div>\n        </Layout>\n    )\n}\n\nexport default Swagg","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Influencer/BioPage.js",["235","236","237","238"],"import React, { useEffect, useState } from 'react'\nimport { Helmet } from \"react-helmet\"\nimport { Row, Col, Form, FormControl } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport * as Realm from \"realm-web\"\n// import Avatar from 'react-avatar'\nimport './bioPage.scss'\n// import * as Papa from 'papaparse'\nimport { youtubeAPI } from '../../utils/youtubeAPI'\nimport { carTempData } from '../carTempData'\nimport { commentsTempData } from '../commentsTempData' \nimport Comments from '../Comments'\nimport { uid } from 'react-uid'\nimport Layout from '../Layout/Layout'\nimport SubNav from './SubNav'\n\nimport powerIcon from '../../assets/global/Horsepower.png'\nimport pistonIcon from '../../assets/global/piston.png'\nimport priceIcon from '../../assets/global/Price-Tag-icon.png'\n\nconst BioPage = (props) =>{\n    const influencerId = props.match.params.id\n    const [influencer, setInfluencer] = useState({userId: '', fname: '', lname: '', username: '', fans: null, desc: '', channelId: '', banner_img: '', profile_pic: '', featuredVideo: {id: '', title: ''}})\n    // const { banner_img, username, profile_pic, fans } = props.location.state.influencer\n    const [formattedFans, setFormattedFans] = useState('')\n    \n    // const { params: { id } } = props.match\n    const videoEmbedURL = 'https://www.youtube.com/embed/'\n    // const EddieXChannelId = 'UCdOXRB936PKSwx0J7SgF6SQ'\n    const [searchKeyword, setSearchKeyword] = useState('')\n    const [titleStr, setTitleStr] = useState('Your search result')\n    const [searchedCarData, setSearchedCarData] = useState([])\n    \n    const appConfig = {\n        id: process.env.REACT_APP_REALM_APP_ID,\n        // timeout: 10000, \n        // timeout in number of milliseconds\n      };\n    const app = new Realm.App(appConfig);\n    const mongo = app.currentUser.mongoClient(process.env.REACT_APP_REALM_SERVICE_NAME)\n    const handleChangeKeyword = (e) =>{\n        setSearchKeyword(e.target.value)\n    }\n    const handleVideoSearch = async e =>{\n        e.preventDefault()\n        await youtubeAPI.get('/search', {\n            params: {\n                q: searchKeyword,\n                channelId: influencer.channelId\n            }\n        }).then(res =>{\n            console.log('res from youtube', res)\n            setTitleStr(\"EddieX \" + searchKeyword)\n            const searchResult = res.data.items\n            console.log('is this array?', res.data.items)\n            const datayoutube =[]\n            searchResult.map(data =>{\n                datayoutube.push({\n                    videoId: data.id.videoId,\n                    youtube:{\n                        snippet: {title: data.snippet.title}\n                    }\n                })\n            })\n            setSearchedCarData(datayoutube)\n            console.log('use state check: ', searchedCarData)\n            \n        })\n    }\n    const getInfluencer = async () =>{\n\n        try {\n \n            const mongoCollection = mongo.db(\"smoke-show\").collection(\"influencers\");\n            const filter = {userId: influencerId} \n            await mongoCollection.findOne(filter).then(res =>{\n                console.log('res', res)\n                setInfluencer(res)\n                if(res.fans > 999){\n                    setFormattedFans(Math.sign(res.fans)*((Math.abs(res.fans)/1000).toFixed(1)) + 'k')\n                }else{\n                    setFormattedFans(Math.sign(res.fans)*Math.abs(res.fans))\n                }\n            })\n           \n        //   }\n        //   )\n         }catch(error){console.log(error)}\n    }\n    useEffect( async () => {\n\n        try {\n\n            const mongoCollection = mongo.db(\"smoke-show\").collection(\"comments\");\n            const filter = {videoId: 'QHLojVxs'} \n            await mongoCollection.find(filter).then(resAll =>{\n            })\n\n         }catch(error){console.log(error)}\n      }, [])\n      useEffect(() => {\n        getInfluencer()\n      }, [])\n    return(\n        <Layout>\n            <Helmet>\n                <title>Influencer {`${influencer.username}`} Bio | The Smoke Show</title>\n            </Helmet>\n            <div className=\"main-wrapper\">\n   \n                <SubNav influencer={influencer} formattedFans={formattedFans} />\n\n                <div className=\"spacer-2rem\"></div>\n                <Row>\n                    <Col sm={6}>\n                        <div className=\"videoWrapper\">\n                            <iframe src={ typeof(influencer.featuredVideo.id) == 'undefined' ? '' : videoEmbedURL + influencer.featuredVideo.id}\n                                    frameBorder='0'\n                                    allow='autoplay; encrypted-media'\n                                    allowFullScreen\n                                    title='video'\n                            />\n                            \n                        </div>\n                        <h3 style={{marginTop:'10px'}}>{influencer.featuredVideo.title}</h3>\n                    </Col>\n                    <Col sm={6}>\n                        <div className=\"bio-desc-wrapper\">\n                            <p>{influencer.desc}</p>\n                        </div>\n                        \n                    </Col>\n                </Row>\n                <div className=\"spacer-4rem\"></div>\n                <h2 className=\"title\">New This Week</h2>\n                <Row style={{paddingLeft:'-7px', paddingRight:'-7px'}}>\n                {\n                    carTempData.map((car, index) =>{\n        \n                        return <>\n                        <Col sm={6} key={uid(car)}>\n                        <Row>\n                            <Col sm={8} >\n                                <div className=\"videoWrapper\">\n                                    <iframe src={videoEmbedURL + car.videoId}\n                                            frameBorder='0'\n                                            allow='autoplay; encrypted-media'\n                                            allowFullScreen\n                                            title='video'\n                                    \n                                    />\n                                </div>\n                                <h3 style={{marginTop:'10px'}}>{car.youtube.snippet.title}</h3>\n                                {/* <Row className=\"comment-wrapper\">\n                                    <Col sm={1} style={{margin:0,padding:0}}>\n                                    {car.profile_pic ? <img src={car.profile_pic} className=\"creator-profile-pic\" /> :\n                                    <Avatar color={Avatar.getRandomColor('sitebase', ['red', 'green', 'teal'])} className=\"creator-profile-pic\" name={car.creator} />\n                                    }\n                                        \n                                    </Col>\n                                    <Col sm={11} style={{margin: 0, paddingRight:0, margin: 'auto'}}>\n                                    <div className=\"creator-name\"><strong>{car.creator}</strong><br /> <span style={{color:'gray', fontSize: '13px'}}>{' '} {car.fans} fans</span></div>\n\n                                    </Col>\n                                </Row> */}\n                    \n                                <Comments comments={commentsTempData[index]} videoId={car.videoId}/>\n                            </Col>\n                            <Col sm={4} className=\"bio-stats\">\n                                <div className=\"spec-wrapper\">\n                                <img alt={car.name} key={car.logoUrl} src={require(`../../assets/car-brand-logos/${car.logoUrl}`).default} className=\"icon-s\" />{' '}<span className=\"spec-text\"><strong>{car.name}</strong></span><br/>\n                                <img alt=\"price\" key={priceIcon} src={priceIcon} className=\"icon-s\" /><span className=\"spec-text\">{' '}${car.price}</span><br />\n                                <img alt=\"power \" key={powerIcon} src={powerIcon} className=\"icon-s\" /><span className=\"spec-text\">{' '}{car.engine}</span><br />\n                                <img alt=\"piston\" key={pistonIcon} src={pistonIcon} className=\"icon-s\" /><span className=\"spec-text\">{' '}{car.hoursepower}</span><br />\n                                </div>\n                            </Col>\n                        </Row>\n                    </Col>\n                        </>\n                    })\n                }\n            </Row>\n            <div className=\"spacer-4rem\"></div>\n            <div className=\"title title-adj\">\n                <h2 style={{marginBottom: '-1rem'}}>{titleStr}</h2>\n                <Form inline onSubmit={handleVideoSearch} style={{marginRight: '-8px'}}>\n                    <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2 form-adj\" onChange={handleChangeKeyword}/>\n                </Form>\n                </div>\n                <Row style={{paddingLeft:'-7px', paddingRight:'-7px'}}>\n                {searchedCarData &&\n                    searchedCarData.map((car, index) =>{\n        \n                        return <>\n                        <Col sm={6} key={uid(car)}>\n                        <Row>\n                            <Col sm={8} >\n                                <div className=\"videoWrapper\">\n                                    <iframe src={videoEmbedURL + car.videoId}\n                                            frameBorder='0'\n                                            allow='autoplay; encrypted-media'\n                                            allowFullScreen\n                                            title='video'\n                                    \n                                    />\n                        \n                                </div>\n                                <h3 style={{marginTop:'10px'}}>{car.youtube.snippet.title}</h3>\n                            </Col>\n                            <Col sm={4} style={{paddingLeft:0}}>\n                                <div className=\"spec-wrapper\">\n                                {/* <img alt={car.name} key={car.logoUrl} src={require(`../assets/car-brand-logos/${car.logoUrl}`).default} className=\"icon-s\" />{' '}<span className=\"spec-text\"><strong>{car.name}</strong></span><br/>\n                                <img alt=\"price\" key={priceIcon} src={priceIcon} className=\"icon-s\" /><span className=\"spec-text\">{' '}${car.price}</span><br />\n                                <img alt=\"power \" key={powerIcon} src={powerIcon} className=\"icon-s\" /><span className=\"spec-text\">{' '}{car.engine}</span><br />\n                                <img alt=\"piston\" key={pistonIcon} src={pistonIcon} className=\"icon-s\" /><span className=\"spec-text\">{' '}{car.hoursepower}</span><br /> */}\n                                </div>\n                            </Col>\n                        </Row>\n                    </Col>\n                        </>\n                })\n                }\n                </Row>\n            </div>\n        </Layout>\n        \n    )\n}\nconst mapStateToProps = (state) => {\n    //syntax is propName: state.key of combineReducer.key\n    return{\n      username: state.user.username,\n    }\n  }\n\nexport default connect(mapStateToProps)(BioPage)\n\n","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Fan/BioPage.js",["239","240","241"],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/CarSearch.js",["242","243","244","245","246","247","248"],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Giveaways.js",[],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/store/reducers/authReducer.js",[],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/store/reducers/userReducer.js",["249"],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/commentsTempData.js",[],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/carTempData.js",[],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Comments.js",["250"],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Layout/Layout.js",[],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/giveAwayData.js",[],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/utils/youtubeAPI.js",[],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Fan/vehicleCard.js",[],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Fan/CreateNewCar.js",["251","252","253"],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Layout/Header.js",["254","255","256"],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Layout/Footer.js",[],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Fan/SettingModal.js",["257","258","259","260","261","262"],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Layout/SignUpModal.js",["263","264"],"import React, { useState } from 'react'\nimport { Modal, Button, Form } from 'react-bootstrap'\nimport * as Realm from \"realm-web\"\nimport { createNewUser } from '../../store/actions/userActions'\nimport { connect } from 'react-redux'\nimport Logo from '../../assets/global/Logo-smoke-show.png'\n\n\nconst SignUpModal = (props) =>{\n    const [userObj, setUserObj] = useState({fname: '', lname: '', email: '', password: '', password2: '', username: ''})\n    const [msg, setMsg] = useState(\"\")\n    const [emailSent, setEmailSent] = useState(false)\n    const [hasError, setHasError] = useState(false)\n    //this is different from props.app -getApp\n    const appId = process.env.REACT_APP_REALM_APP_ID\n    const getApp = Realm.App.getApp(appId);\n    \n    // console.log('check from signin', props)\n    const handleChange =(e) =>{\n        setUserObj({\n            ...userObj,\n            [e.target.name]: e.target.value\n        })\n    }\n    const handleSubmit = async (e) =>{\n        e.preventDefault()\n        setHasError(false)\n        const email = userObj.email.toLowerCase()\n        if(userObj.password === userObj.password2){\n            try{\n                await getApp.emailPasswordAuth.registerUser(email, userObj.password).then(async res =>{\n                    console.log('res token?', res)\n                  \n                    setEmailSent(true)\n                    e.target.reset()\n                    \n                })\n       \n                \n            }catch(error){\n                console.log('error', error)\n                setMsg(\"This email address is already registered.\")\n                setHasError(true)\n            }\n        }else{\n            setMsg(\"Your Email or Password do not match our records. Try again.\")\n            setHasError(true)\n        }\n        \n    }\n    const resendConfirmationEmail = async (email)=>{\n        const credentials = Realm.Credentials.anonymous();\n        await applicationCache.logIn(credentials).then(user =>{\n            const mongo = user.mongoClient(process.env.REACT_APP_REALM_SERVICE_NAME)\n            // const mongoCollection = mongo.db(\"smoke-show\").collection(\"commeusernts\");\n            // const filter = {email: email} \n            // mongoCollection.find(filter).then(pendingUser =>{\n            //     const token = pendingUser.token\n            //     const tokenId = pendingUser.tokenId\n            // })\n        })\n        console.log('under construction')\n    }\n    // const handleSubmitToDispatch = () =>{\n    //     props.createNewUser(userObj)\n    // }\n    return (\n        <Modal\n          {...props}\n          size=\"lg\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n        >\n          <Modal.Header closeButton>\n            {/* <Modal.Title id=\"contained-modal-title-vcenter\">\n              Modal heading\n            </Modal.Title> */}\n            \n          </Modal.Header>\n          {emailSent ? \n          <center>\n              <h3>Thank you for your registration. <br /><br />\n              Please check your email and click to confirm. <br /><br />\n              Please check your spam box if you do not find the confirmation email.\n              </h3>\n              <div className=\"spacer-4rem\"></div>\n          </center>\n          :\n          <Modal.Body className=\"custom-modal-body\">\n            <div className=\"login-logo-wrapper\">\n                <img src={Logo} alt=\"The Smoke Show\" className=\"logo-header\" />\n            </div>\n          \n            <Form className=\"login-form\" onSubmit={handleSubmit}>\n             \n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"e.g. example@example.com\" name=\"email\" onChange={handleChange} />\n                </Form.Group>\n                <div className=\"spacer-1rem\"></div>\n                {/* <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"e.g. Smoke Show love\" name=\"username\" onChange={handleChange} />\n                </Form.Group> */}\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Between 6 and 128 characters long\" name=\"password\" onChange={handleChange} />\n                </Form.Group>\n                <div className=\"spacer-1rem\"></div>\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"\" name=\"password\" onChange={handleChange} name=\"password2\" />\n                </Form.Group>\n                {hasError && \n                <div>\n                    <div className=\"error-msg\">{msg}</div>\n                    <p onClick={resendConfirmationEmail}>Click here to resend the confirmation email</p>\n                </div>}\n                <div className=\"spacer-2rem\"></div>\n                <div className=\"login-btn-wrapper\">\n                    <Button className=\"login-btn\" type=\"submit\">\n                        Signup\n                    </Button><br /><br />\n                    <p className=\"click-div\" onClick={ props.toggleModal}>Or Login here</p>\n                </div>\n                \n            </Form>\n          </Modal.Body>\n\n        }\n        </Modal>\n      );\n}\nconst mapDispatchToProps = (dispatch) =>{\n    return {\n        createNewUser: (userObj) => dispatch(createNewUser(userObj))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignUpModal)\n\n// export default SignUpModal","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Layout/LoginModal.js",["265","266","267","268","269","270","271"],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/store/actions/userActions.js",["272"],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/store/actions/authActions.js",[],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Shopify/Cart.js",[],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Shopify/Products.js",["273"],"import React, { Component } from 'react';\nimport Product from './Product';\nimport { Row, Container } from 'react-bootstrap'\n\nclass Products extends Component {\n  render() {\n    let products = this.props.products.map((product) => {\n      return (\n        <Product\n          addVariantToCart={this.props.addVariantToCart}\n          client={this.props.client}\n          key={product.id.toString()}\n          product={product}\n        />\n      );\n    });\n\n    return (\n      <div className=\"width-adj-shop\">\n        <Row>\n          {products}\n        </Row>\n      </div>\n      \n    );\n  }\n}\n\nexport default Products;\n","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Shopify/Product.js",[],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Shopify/LineItem.js",[],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Shopify/VariantSelector.js",[],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Fan/ImageUpload.js",["274"],"import React from 'react'\nimport { useState, useEffect } from 'react'\nimport uploadIcon from '../../assets/global/upload.svg'\n\nimport { useDropzone } from 'react-dropzone'\n\n  const thumbsContainer = {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginTop: 16\n  };\n  \n  const thumb = {\n    display: 'inline-flex',\n    borderRadius: 2,\n    border: '1px solid #eaeaea',\n    marginBottom: 8,\n    marginRight: 8,\n    width: 100,\n    height: 100,\n    padding: 4,\n    boxSizing: 'border-box'\n  };\n  \n  const thumbInner = {\n    display: 'flex',\n    minWidth: 0,\n    overflow: 'hidden'\n  };\n  \n  const img = {\n    display: 'block',\n    width: 'auto',\n    height: '100%'\n  };\n\n\nconst ImageUpload = (props ) => {\n    \n    const [files, setFiles] = useState([])\n    const [msg, setMsg] = useState('')\n    const [uploaded, setUploaded] = useState(false)\n\n    const getFileData = (obj) => {\n        // Create a root reference\n        console.log('file obj', obj)\n        // const newValue = files[0]\n        props.fileObj(obj)\n    }\n\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({\n            accept: 'image/*',\n            onDrop: acceptedFiles => {\n              \n              if(acceptedFiles.length > 1){\n                  setMsg('You can upload only one image.')\n              }else{\n                    getFileData(acceptedFiles[0])\n                    setUploaded(true)\n                    if(props.imgChange){\n                      props.imgChange(true)\n                    }\n                    \n                    setFiles(acceptedFiles.map( file => Object.assign(file, {\n                              preview: URL.createObjectURL(file)\n                          \n                        })\n                        ))\n              }\n            }\n          })\n\n    const thumbs = files.map(file => (\n      <div style={thumb} key={file.name}>\n        <div style={thumbInner}>\n          <img\n            src={file.preview}\n            style={img}\n          />\n        </div>\n      </div>\n    ));\n  \n    useEffect(() => {\n      // Make sure to revoke the data uris to avoid memory leaks\n        files.forEach(file => URL.revokeObjectURL(file.preview));\n    }, [files]);\n\n    return ( \n        <React.Fragment>\n            {msg ? <p>{msg}</p> : ''}\n                <div {...getRootProps({className: 'dropzone'})} className=\"dropzone dropzone-wrapper\" >\n                    <input {...getInputProps()} required/>\n                    {\n                            isDragActive ?\n                            <p>Drop the files here ...</p> :\n                            <div className=\"drag-dropzone\">\n                                <div className=\"bio-modal-container\">\n                                    <img src={uploadIcon} alt=\"upload files here\" />\n                                    <p style={{padding: '5px'}}>\n                                      { uploaded ? 'Change Image' : 'Drop an image file here or click to upload an image'}\n                                    </p>\n                                    <p>*3MB max image file size<br/>\n                                    *accepted file formats: jpg, png, gif</p>\n                                    <aside style={thumbsContainer}>\n                                        {uploaded ? thumbs : ''}\n                                    </aside>\n                                </div>\n                                \n                            </div>\n                        }\n                    \n                </div>\n                \n         \n        </React.Fragment>\n\n     );\n}\n \nexport default ImageUpload;","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Influencer/Garage.js",["275"],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Influencer/CreateNewCar.js",["276","277","278"],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Influencer/ImageUpload.js",["279"],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Influencer/SettingModal.js",["280","281","282","283"],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Influencer/vehicleCard.js",["284"],"import React, { useState, Fragment, useCallback } from 'react'\nimport { Row, Col, Modal, Button, Form } from 'react-bootstrap'\n// import {useDropzone} from 'react-dropzone'\nimport noImg from '../../assets/global/no_image.jpg'\nimport * as Realm from \"realm-web\"\nimport ImageUpload from './ImageUpload'\n\nimport editIcon from '../../assets/global/edit-icon.svg'\nimport short from 'short-uuid'\n// import uploadIcon from '../../assets/global/upload.svg'\n\nconst VehicleCard = (props) =>{\n    const [imgFile, setImgFile] = useState('')\n    const [imgData64, setImgData64] = useState('')\n    const [newImg, setNewImg] = useState(false)\n    const carColors = ['White', 'Black', 'Grey', 'Blue', 'Silver', 'Red', 'Orange', 'Bronze', 'Yellow', 'Green', 'Navy']\n    const [carObj, setCarObj] = useState({name: props.car.name, color: props.car.color, wheels: props.car.wheels, performance: props.car.performance, upgrades: props.car.upgrades, imgUrl: props.car.imgUrl})\n    const [show, setShow] = useState(false)\n    const bucketName = process.env.REACT_APP_AWS_BUCKET_NAME;\n    const appConfig = {\n        id: process.env.REACT_APP_REALM_APP_ID,\n        timeout: 10000, // timeout in number of milliseconds\n        };\n    const app = new Realm.App(appConfig)\n\n    const imgChange = (state) => {\n        setNewImg(state)\n    }\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true)\n    // const onDrop = useCallback(acceptedFiles => {\n    //     // Do something with the files\n    //   }, [])\n    // const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n    const handleChange = (e) =>{\n        setCarObj({\n            ...carObj,\n            [e.target.name]: e.target.value\n        })\n    }\n    const updateData = async (carData, mongo) =>{\n        const collectionMyCars = mongo.db(process.env.REACT_APP_REALM_DB_NAME).collection(\"my-cars\")\n        try{\n            await collectionMyCars.updateOne(\n                {_id: props.car._id},\n                { $set: carData }\n            ).then(res =>{\n                console.log('res', res)\n                props.getMyCars(props.car.userId, mongo)\n                handleClose()\n            })\n            \n        }catch(err){\n            console.log(err)\n        }\n    }\n    const deleteImgObj = async (key) =>{\n\n        if(app.currentUser.id === props.profileUser.userId){\n            try{\n                await app.currentUser.functions.deleteImageObjToS3(bucketName, key).then(res =>{\n                    console.log('res', res)\n                })\n            }catch(err){console.log(err)}\n        }\n    }\n    const handleSubmit = async (e) =>{\n        console.log('checking')\n        const baseImgUrl = 'https://s3.amazonaws.com/images.test.smokeshow/'\n        const imgId = short.generate()\n        const filekey = props.profileUser.userId + '/my-cars/' + imgId\n        const imgUrlWithKey = baseImgUrl + filekey\n        const mongo = app.currentUser.mongoClient(process.env.REACT_APP_REALM_SERVICE_NAME);\n        \n        const carData ={\n            name: carObj.name,\n            upgrades: carObj.upgrades,\n            wheels: carObj.wheels,\n            color: carObj.color,\n            userId: props.profileUser.userId,\n            performance: carObj.performance\n        }\n        e.preventDefault()\n        if(app.currentUser.id === props.profileUser.userId){\n            \n            if(newImg){\n                carData.imgUrl = imgUrlWithKey\n                await app.currentUser.functions.putImageObjToS3(imgData64, bucketName, filekey, imgFile.type).then(res =>{\n                    const currentUrl = props.car.imgUrl\n                    const splitted = currentUrl.split('/');\n                    const key = splitted.splice(4, 7).join(\"/\")\n                    deleteImgObj(key)\n                    updateData(carData, mongo)\n                })\n            }else{\n                updateData(carData, mongo)\n            }\n            \n        }else{\n            console.log('figure out what is going on')\n        }\n    }\n    const setImgData = (obj) =>{\n    setImgFile(obj)\n    var file = obj\n    const reader = new FileReader();\n    reader.onload = (event) => {\n    const base64 = event.target.result.split(\",\").pop()\n        setImgData64(base64)\n    //   console.log(base64);\n    };\n    reader.readAsDataURL(file);\n    }\n\n    const editModal = \n    <Fragment>\n        <Modal show={show} onHide={handleClose} className=\"modal-wrapper-bio\">\n            <Modal.Header closeButton>\n            </Modal.Header>\n            <Modal.Body>\n                <Row className=\"bio-modal-inner-wrapper\">\n                    <Col sm={6} className=\"\">\n                    <ImageUpload fileObj={setImgData} imgChange={imgChange} />\n                    {/* <div {...getRootProps()} className=\"dropzone-wrapper\">\n                        <input {...getInputProps()} />\n                        {\n                            isDragActive ?\n                            <p>Drop the files here ...</p> :\n                            <div className=\"drag-dropzone\">\n                                <div className=\"bio-modal-container\">\n                                    <img src={uploadIcon} alt=\"upload files here\" />\n                                    <p>Drag and drop or click to upload an image</p>\n                                    <p>*3MB max image file size<br/>\n                                    *accepted file formats: jpg, png, gif</p>\n                                </div>\n\n                            </div>\n                        }\n                    </div> */}\n                    </Col>\n                    <Col sm={6}>\n                    <h3>Category: {props.car.category}</h3>\n                    <hr />\n                    <Form>\n                        <Form.Group >\n                            <Form.Label>Car name</Form.Label>\n                            <Form.Control type=\"text\" placeholder={carObj.name} onChange={handleChange} name=\"name\"/>\n                        </Form.Group>\n                        <br/>\n                        <Form.Group >\n                            <Form.Label>Color</Form.Label>\n                            {/* <Form.Control type=\"text\" placeholder=\"Select your color\" onChange={handleChange} name=\"color\" /> */}\n                            <Form.Control as=\"select\" onChange={handleChange}>\n                            {carColors.map((color, index) =>{\n                                return(\n                                    <option key={color + index}>{color}</option>\n                                )\n                            })}\n                                \n                            </Form.Control>\n                        </Form.Group>\n                        <br/>\n                        <Form.Group >\n                            <Form.Label>Wheels</Form.Label>\n                            <Form.Control type=\"text\" placeholder={carObj.wheels} onChange={handleChange} name=\"wheels\"/>\n                        </Form.Group>\n                        <br/>\n                        <Form.Group >\n                            <Form.Label>Performance</Form.Label>\n                            <Form.Control type=\"text\" placeholder={carObj.performance} onChange={handleChange} name=\"performance\" />\n                        </Form.Group>\n                        <br/>\n                        <Form.Group >\n                            <Form.Label>Upgrade</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Enter your update\" onChange={handleChange} name={carObj.upgrades} />\n                        </Form.Group>\n                        <br/><br/>\n                        <Row>\n                            <Col sm={6}>\n                                <Button variant=\"secondary\" onClick={handleClose} className=\"cancel-btn\" > \n                                    Cancel\n                                </Button>\n                            </Col>\n                            <Col sm={6}>\n                                <Button variant=\"primary\" onClick={handleSubmit} className=\"save-changes-btn\">\n                                Save Changes\n                                </Button>\n                            </Col>\n                        </Row>\n                    </Form>\n                    </Col>\n                </Row>\n            </Modal.Body>\n            <Modal.Footer>\n  \n            </Modal.Footer>\n        </Modal>\n    </Fragment>\n    \n\n    return(\n        <div className=\"bio-container box-shadow-white\">\n        { editModal}\n            <div className=\"car-names\">\n                <strong>{props.car.category ? props.car.category : 'Dream Car'}</strong>\n                    <div className=\"edit-icon-wrapper-card\" onClick={handleShow}>\n                    {props.allowEdit && \n                        <img className=\"edit-icon\" src={editIcon} alt=\"Edit about you\"/>\n                    }\n                        \n                    </div>\n            </div>\n            <Row>\n                <Col sm={5} >\n                    <img src={props.car.imgUrl !== undefined ? props.car.imgUrl : noImg} className=\"bio-my-car\" alt=\"my daily driver\" />\n                </Col>\n                <Col sm={7} >\n                    <div className=\"bio-car-contents\">\n                        <p>Name: {props.car.name}</p>\n                        <p>Upgrades: {props.car.upgrades}</p>\n                        <p>Color: {props.car.color}</p>\n                        <p>Wheels: {props.car.wheels}</p>\n                        <p>Performance: {props.car.performance}</p>\n                    </div>\n                    \n                </Col>\n            </Row>\n        </div>\n    )\n}\nexport default VehicleCard","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Influencer/SubNav.js",["285","286","287","288","289"],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Influencer/Social.js",["290"],"import React, { Fragment, useEffect, useState} from 'react'\nimport { Link } from 'react-router-dom'\nimport { Row, Col } from 'react-bootstrap'\nimport Layout from '../Layout/Layout'\nimport { Helmet } from \"react-helmet\"\nimport SubNav from './SubNav'\nimport * as Realm from \"realm-web\"\nimport './social.scss'\n\nimport instaIcon from '../../assets/social/instagram.svg'\nimport fbIcon from '../../assets/social/facebook.svg'\nimport twitterIcon from '../../assets/social/twitter.svg'\nimport tiktokIcon from '../../assets/social/TikTok.svg'\nimport amazonIcon from '../../assets/social/Amazon-Affiliate-program.jpg'\n\nconst Social = (props) =>{\n    const appConfig = {\n        id: process.env.REACT_APP_REALM_APP_ID,\n        // timeout: 10000, \n        // timeout in number of milliseconds\n      };\n    const app = new Realm.App(appConfig);\n    const userIdParam = props.match.params.id\n    const [influencer, setInfluencer] = useState({profileCover: '', profilePic: '', username: '', userId: '', social: {instagram: '', facebook: '', twitter: ''}})\n    // const generateCode = () =>{\n    //     const shortID = short.generate()\n    //     console.log('id', shortID)\n    // }\n    const getData = async () =>{\n        const mongo = app.currentUser.mongoClient(process.env.REACT_APP_REALM_SERVICE_NAME)\n        const collectionInfluencer = mongo.db(\"smoke-show\").collection(\"influencers\")\n        const filter = {userId: userIdParam}\n        try{\n            await collectionInfluencer.findOne(filter).then(user =>{\n                setInfluencer(user)\n\n            })\n        }catch(err){ console.log(err) }\n    }\n    useEffect(() => {\n        getData()\n    }, [])\n    return(\n        <Fragment>\n            <Helmet>\n                <title>Influencer Social Media Links | The Smoke Show</title>\n                <meta name=\"description\" content=\"Place the meta description text here.\" />\n            <meta name=\"robots\" content=\"noindex, nofollow\" />\n            </Helmet>\n            <Layout>\n                <div className=\"main-wrapper\">\n                    <div className=\"spacer-4rem\"></div>\n                    <SubNav influencer={influencer} />\n                    <div className=\"spacer-4rem\"></div>\n                    <h2 className=\"title\">{influencer.username} Social Media</h2>\n                    <div className=\"spacer-4rem\"></div>\n                    <Row>\n                        <Col sm={6}>\n                            <ul style={{listStyle: 'none'}}>\n                            {influencer.social.instagram && \n                                <li className=\"social-media-container\">\n                                    <Link to={influencer.social.instagram}>\n                                        <img className=\"social-img\" src={instaIcon} alt=\"Instagram\" />\n                                        <p className=\"social-text\">{influencer.social.instagram}</p>\n                                    </Link>\n                                </li>\n                            }\n                            \n                            {influencer.social.facebook && \n                                <li className=\"social-media-container\">\n                                    <Link to={influencer.social.facebook}>\n                                        <img className=\"social-img\" src={fbIcon} alt=\"Instagram\" />\n                                        <p className=\"social-text\">{influencer.social.facebook}</p>\n                                    </Link>\n                                </li>\n                            }\n                            {influencer.social.twitter && \n                                <li className=\"social-media-container\">\n                                    <Link to={influencer.social.twitter}>\n                                        <img className=\"social-img\" src={twitterIcon} alt=\"Instagram\" />\n                                        <p className=\"social-text\">{influencer.social.twitter}</p>\n                                    </Link>\n                                </li>\n                            }\n                            {influencer.social.tiktok && \n                                <li className=\"social-media-container\">\n                                    <Link to={influencer.social.tiktok}>\n                                        <img className=\"social-img\" src={tiktokIcon} alt=\"Instagram\" />\n                                        <p className=\"social-text\">{influencer.social.tiktok}</p>\n                                    </Link>\n                                </li>\n                            }\n                            </ul>\n                        </Col>\n                        <Col sm={6}>\n                            <ul style={{listStyle: 'none'}}>\n                            {influencer.social.amazon && \n                                <li className=\"social-media-container\">\n                                    <Link to={influencer.social.amazon}>\n                                        <img className=\"social-img\" src={amazonIcon} alt=\"Instagram\" />\n                                        <p className=\"social-text\">{influencer.social.amazon}</p>\n                                    </Link>\n                                </li>\n                            }\n                            </ul>\n                        </Col>\n                    </Row>\n                    \n                </div>\n            </Layout>\n        </Fragment>\n        \n    )\n}\n\nexport default Social","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Influencer/Swagg.js",["291"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport Layout from '../Layout/Layout'\nimport { Helmet } from \"react-helmet\"\nimport * as Realm from \"realm-web\"\nimport SubNav from './SubNav'\nimport { Row, Col } from 'react-bootstrap'\nimport './social.scss'\nimport teeSpringIcon from '../../assets/swagg/teespring-logo.jpg'\nimport printfulIcon from '../../assets/swagg/printful.jpg'\n\nconst SwaggInfluencer = (props) =>{\n    const [influencer, setInfluencer] = useState({profileCover: '', profilePic: '', username: '', userId: '', swagg: {teeSpring: '', printful: ''}})\n    const [formattedFans, setFormattedFans] = useState('')\n    const [noData, setNodata] = useState(false)\n    const appConfig = {\n        id: process.env.REACT_APP_REALM_APP_ID,\n        // timeout: 10000, \n        // timeout in number of milliseconds\n      };\n    const app = new Realm.App(appConfig)\n    const userIdParam = props.match.params.id\n    const getData = async () =>{\n        const mongo = app.currentUser.mongoClient(process.env.REACT_APP_REALM_SERVICE_NAME)\n        const collectionInfluencer = mongo.db(\"smoke-show\").collection(\"influencers\")\n        const filter = {userId: userIdParam}\n        try{\n            await collectionInfluencer.findOne(filter).then(user =>{\n                setInfluencer(user)\n                if(!user.swagg.teeSpring && !user.swagg.printful) setNodata(true)\n                if(user.fans > 999){\n                    setFormattedFans(Math.sign(user.fans)*((Math.abs(user.fans)/1000).toFixed(1)) + 'k')\n                }else{\n                    setFormattedFans(Math.sign(user.fans)*Math.abs(user.fans))\n                }\n\n            })\n        }catch(err){ console.log(err) }\n    }\n\n    useEffect(() => {\n        getData()\n    }, [])\n    return(\n        <Fragment>\n            <Helmet>\n                <title>Swagg Influencer | The Smoke Show</title>\n            </Helmet>\n            <Layout>\n                <div className=\"main-wrapper\" style={{minHeight: 'calc(100vh - 21rem)'}}>\n                    <div className=\"spacer-4rem\"></div>\n                    <SubNav influencer={influencer} formattedFans={formattedFans}/>\n                    <div className=\"spacer-4rem\"></div>\n                    <h2 className=\"title\">{influencer.username} Swagg</h2>\n                    <div className=\"spacer-4rem\"></div>\n                    <Row>\n                        <Col sm={6}>\n                            <ul style={{listStyle: 'none'}}>\n                                { noData && <p>No Swagg</p>}\n                                { influencer.swagg.teeSpring &&\n                                <li className=\"social-media-container\">\n                                    <Link to={influencer.swagg.teeSpring}>\n                                        <img src={teeSpringIcon} alt=\"Teespring\" className=\"social-img\"/>\n                                        <p className=\"social-text\">{influencer.swagg.teeSpring}</p>\n                                    </Link>\n                                </li>\n                                }\n                                {influencer.swagg.printful && \n                                <li className=\"social-media-container\">\n                                    <Link to={influencer.swagg.teeSpring}>\n                                        <img src={printfulIcon} alt=\"Printful\" className=\"social-img\"/>\n                                        <p className=\"social-text\">{influencer.swagg.printful}</p>\n                                    </Link>\n                                </li>\n                                }\n                            </ul>\n                        </Col>\n                        <Col sm={6}>\n                            \n                        </Col>\n                    </Row>\n                </div>\n            </Layout>\n        </Fragment>\n    )\n}\n\nexport default SwaggInfluencer","/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/store/actions/bioActions.js",[],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/store/reducers/bioReducer.js",["292","293"],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Admin/QueryVideoData.js",["294","295","296","297","298","299","300","301","302"],"/Users/sakihayashi/Desktop/JOBS/Brandon/web/client/src/components/Admin/EditVideoData.js",["303","304","305","306","307"],{"ruleId":"308","replacedBy":"309"},{"ruleId":"310","replacedBy":"311"},{"ruleId":"312","severity":1,"message":"313","line":27,"column":8,"nodeType":"314","messageId":"315","endLine":27,"endColumn":22},{"ruleId":"316","severity":1,"message":"317","line":69,"column":10,"nodeType":"318","endLine":69,"endColumn":12,"suggestions":"319"},{"ruleId":"320","severity":1,"message":"321","line":98,"column":17,"nodeType":"322","messageId":"323","endLine":98,"endColumn":23},{"ruleId":"316","severity":1,"message":"324","line":130,"column":8,"nodeType":"318","endLine":130,"endColumn":10,"suggestions":"325"},{"ruleId":"312","severity":1,"message":"326","line":19,"column":22,"nodeType":"314","messageId":"315","endLine":19,"endColumn":33},{"ruleId":"312","severity":1,"message":"327","line":21,"column":17,"nodeType":"314","messageId":"315","endLine":21,"endColumn":23},{"ruleId":"312","severity":1,"message":"328","line":15,"column":8,"nodeType":"314","messageId":"315","endLine":15,"endColumn":17},{"ruleId":"312","severity":1,"message":"329","line":26,"column":12,"nodeType":"314","messageId":"315","endLine":26,"endColumn":21},{"ruleId":"312","severity":1,"message":"330","line":26,"column":23,"nodeType":"314","messageId":"315","endLine":26,"endColumn":35},{"ruleId":"331","severity":1,"message":"332","line":66,"column":52,"nodeType":"333","messageId":"334","endLine":66,"endColumn":54},{"ruleId":"312","severity":1,"message":"335","line":257,"column":11,"nodeType":"314","messageId":"315","endLine":257,"endColumn":21},{"ruleId":"316","severity":1,"message":"336","line":68,"column":4,"nodeType":"318","endLine":68,"endColumn":6,"suggestions":"337"},{"ruleId":"320","severity":1,"message":"321","line":57,"column":35,"nodeType":"338","messageId":"339","endLine":57,"endColumn":37},{"ruleId":"316","severity":1,"message":"340","line":90,"column":16,"nodeType":"338","endLine":100,"endColumn":8},{"ruleId":"316","severity":1,"message":"341","line":100,"column":10,"nodeType":"318","endLine":100,"endColumn":12,"suggestions":"342"},{"ruleId":"316","severity":1,"message":"343","line":103,"column":10,"nodeType":"318","endLine":103,"endColumn":12,"suggestions":"344"},{"ruleId":"316","severity":1,"message":"345","line":263,"column":8,"nodeType":"318","endLine":263,"endColumn":10,"suggestions":"346"},{"ruleId":"347","severity":1,"message":"348","line":280,"column":21,"nodeType":"349","endLine":291,"endColumn":24},{"ruleId":"347","severity":1,"message":"348","line":296,"column":29,"nodeType":"349","endLine":296,"endColumn":130},{"ruleId":"320","severity":1,"message":"321","line":85,"column":22,"nodeType":"338","messageId":"339","endLine":85,"endColumn":24},{"ruleId":"320","severity":1,"message":"350","line":94,"column":43,"nodeType":"351","messageId":"352","endLine":94,"endColumn":52},{"ruleId":"320","severity":1,"message":"353","line":107,"column":43,"nodeType":"338","messageId":"352","endLine":107,"endColumn":45},{"ruleId":"320","severity":1,"message":"354","line":121,"column":48,"nodeType":"338","messageId":"352","endLine":121,"endColumn":50},{"ruleId":"331","severity":1,"message":"332","line":122,"column":25,"nodeType":"333","messageId":"334","endLine":122,"endColumn":27},{"ruleId":"312","severity":1,"message":"355","line":177,"column":15,"nodeType":"314","messageId":"315","endLine":177,"endColumn":26},{"ruleId":"316","severity":1,"message":"356","line":182,"column":7,"nodeType":"318","endLine":182,"endColumn":9,"suggestions":"357"},{"ruleId":"358","severity":1,"message":"359","line":4,"column":5,"nodeType":"360","messageId":"361","endLine":14,"endColumn":6},{"ruleId":"316","severity":1,"message":"362","line":193,"column":8,"nodeType":"318","endLine":193,"endColumn":10,"suggestions":"363"},{"ruleId":"312","severity":1,"message":"364","line":19,"column":11,"nodeType":"314","messageId":"315","endLine":19,"endColumn":21},{"ruleId":"312","severity":1,"message":"365","line":37,"column":11,"nodeType":"314","messageId":"315","endLine":37,"endColumn":21},{"ruleId":"312","severity":1,"message":"366","line":131,"column":19,"nodeType":"314","messageId":"315","endLine":131,"endColumn":26},{"ruleId":"367","severity":1,"message":"368","line":47,"column":158,"nodeType":"349","endLine":47,"endColumn":214},{"ruleId":"316","severity":1,"message":"369","line":57,"column":9,"nodeType":"318","endLine":57,"endColumn":27,"suggestions":"370"},{"ruleId":"316","severity":1,"message":"369","line":73,"column":9,"nodeType":"318","endLine":73,"endColumn":11,"suggestions":"371"},{"ruleId":"312","severity":1,"message":"366","line":126,"column":15,"nodeType":"314","messageId":"315","endLine":126,"endColumn":22},{"ruleId":"372","severity":1,"message":"373","line":312,"column":21,"nodeType":"314","messageId":"374","endLine":312,"endColumn":35},{"ruleId":"331","severity":1,"message":"332","line":366,"column":98,"nodeType":"333","messageId":"334","endLine":366,"endColumn":100},{"ruleId":"331","severity":1,"message":"332","line":373,"column":43,"nodeType":"333","messageId":"334","endLine":373,"endColumn":45},{"ruleId":"316","severity":1,"message":"375","line":380,"column":8,"nodeType":"318","endLine":380,"endColumn":10,"suggestions":"376"},{"ruleId":"347","severity":1,"message":"348","line":463,"column":37,"nodeType":"349","endLine":463,"endColumn":144},{"ruleId":"312","severity":1,"message":"377","line":54,"column":19,"nodeType":"314","messageId":"315","endLine":54,"endColumn":24},{"ruleId":"378","severity":1,"message":"379","line":112,"column":106,"nodeType":"380","endLine":112,"endColumn":122},{"ruleId":"312","severity":1,"message":"381","line":4,"column":10,"nodeType":"314","messageId":"315","endLine":4,"endColumn":18},{"ruleId":"312","severity":1,"message":"382","line":17,"column":11,"nodeType":"314","messageId":"315","endLine":17,"endColumn":14},{"ruleId":"312","severity":1,"message":"383","line":18,"column":22,"nodeType":"314","messageId":"315","endLine":18,"endColumn":33},{"ruleId":"312","severity":1,"message":"384","line":21,"column":11,"nodeType":"314","messageId":"315","endLine":21,"endColumn":20},{"ruleId":"312","severity":1,"message":"385","line":27,"column":11,"nodeType":"314","messageId":"315","endLine":27,"endColumn":17},{"ruleId":"312","severity":1,"message":"386","line":30,"column":11,"nodeType":"314","messageId":"315","endLine":30,"endColumn":22},{"ruleId":"312","severity":1,"message":"387","line":48,"column":11,"nodeType":"314","messageId":"315","endLine":48,"endColumn":22},{"ruleId":"312","severity":1,"message":"388","line":4,"column":7,"nodeType":"314","messageId":"315","endLine":4,"endColumn":13},{"ruleId":"312","severity":1,"message":"389","line":3,"column":15,"nodeType":"314","messageId":"315","endLine":3,"endColumn":24},{"ruleId":"367","severity":1,"message":"368","line":77,"column":11,"nodeType":"349","endLine":80,"endColumn":13},{"ruleId":"316","severity":1,"message":"390","line":267,"column":8,"nodeType":"318","endLine":267,"endColumn":10,"suggestions":"391"},{"ruleId":"312","severity":1,"message":"386","line":61,"column":11,"nodeType":"314","messageId":"315","endLine":61,"endColumn":22},{"ruleId":"372","severity":1,"message":"392","line":104,"column":41,"nodeType":"314","messageId":"374","endLine":104,"endColumn":47},{"ruleId":"372","severity":1,"message":"392","line":106,"column":41,"nodeType":"314","messageId":"374","endLine":106,"endColumn":47},{"ruleId":"367","severity":1,"message":"368","line":77,"column":11,"nodeType":"349","endLine":80,"endColumn":13},{"ruleId":"331","severity":1,"message":"332","line":360,"column":98,"nodeType":"333","messageId":"334","endLine":360,"endColumn":100},{"ruleId":"331","severity":1,"message":"332","line":367,"column":43,"nodeType":"333","messageId":"334","endLine":367,"endColumn":45},{"ruleId":"316","severity":1,"message":"375","line":374,"column":8,"nodeType":"318","endLine":374,"endColumn":10,"suggestions":"393"},{"ruleId":"347","severity":1,"message":"348","line":457,"column":37,"nodeType":"349","endLine":457,"endColumn":144},{"ruleId":"312","severity":1,"message":"394","line":1,"column":37,"nodeType":"314","messageId":"315","endLine":1,"endColumn":48},{"ruleId":"312","severity":1,"message":"395","line":12,"column":12,"nodeType":"314","messageId":"315","endLine":12,"endColumn":19},{"ruleId":"312","severity":1,"message":"396","line":12,"column":21,"nodeType":"314","messageId":"315","endLine":12,"endColumn":31},{"ruleId":"312","severity":1,"message":"397","line":27,"column":11,"nodeType":"314","messageId":"315","endLine":27,"endColumn":27},{"ruleId":"347","severity":1,"message":"348","line":66,"column":17,"nodeType":"349","endLine":66,"endColumn":127},{"ruleId":"312","severity":1,"message":"398","line":102,"column":7,"nodeType":"314","messageId":"315","endLine":102,"endColumn":25},{"ruleId":"316","severity":1,"message":"345","line":42,"column":8,"nodeType":"318","endLine":42,"endColumn":10,"suggestions":"399"},{"ruleId":"316","severity":1,"message":"345","line":43,"column":8,"nodeType":"318","endLine":43,"endColumn":10,"suggestions":"400"},{"ruleId":"312","severity":1,"message":"401","line":1,"column":13,"nodeType":"314","messageId":"315","endLine":1,"endColumn":18},{"ruleId":"358","severity":1,"message":"359","line":7,"column":5,"nodeType":"360","messageId":"361","endLine":11,"endColumn":6},{"ruleId":"312","severity":1,"message":"402","line":1,"column":17,"nodeType":"314","messageId":"315","endLine":1,"endColumn":26},{"ruleId":"312","severity":1,"message":"403","line":2,"column":9,"nodeType":"314","messageId":"315","endLine":2,"endColumn":15},{"ruleId":"312","severity":1,"message":"404","line":3,"column":10,"nodeType":"314","messageId":"315","endLine":3,"endColumn":13},{"ruleId":"312","severity":1,"message":"405","line":3,"column":15,"nodeType":"314","messageId":"315","endLine":3,"endColumn":18},{"ruleId":"312","severity":1,"message":"406","line":3,"column":20,"nodeType":"314","messageId":"315","endLine":3,"endColumn":24},{"ruleId":"312","severity":1,"message":"407","line":3,"column":26,"nodeType":"314","messageId":"315","endLine":3,"endColumn":37},{"ruleId":"312","severity":1,"message":"408","line":9,"column":12,"nodeType":"314","messageId":"315","endLine":9,"endColumn":21},{"ruleId":"312","severity":1,"message":"409","line":9,"column":23,"nodeType":"314","messageId":"315","endLine":9,"endColumn":35},{"ruleId":"312","severity":1,"message":"410","line":18,"column":11,"nodeType":"314","messageId":"315","endLine":18,"endColumn":28},{"ruleId":"312","severity":1,"message":"402","line":1,"column":37,"nodeType":"314","messageId":"315","endLine":1,"endColumn":46},{"ruleId":"312","severity":1,"message":"411","line":4,"column":37,"nodeType":"314","messageId":"315","endLine":4,"endColumn":47},{"ruleId":"312","severity":1,"message":"412","line":5,"column":10,"nodeType":"314","messageId":"315","endLine":5,"endColumn":18},{"ruleId":"312","severity":1,"message":"413","line":8,"column":23,"nodeType":"314","messageId":"315","endLine":8,"endColumn":35},{"ruleId":"312","severity":1,"message":"414","line":13,"column":12,"nodeType":"314","messageId":"315","endLine":13,"endColumn":19},"no-native-reassign",["415"],"no-negated-in-lhs",["416"],"no-unused-vars","'QueryVideoData' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getInfluencers'. Either include it or remove the dependency array.","ArrayExpression",["417"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","React Hook useEffect has a missing dependency: 'confirmUser'. Either include it or remove the dependency array.",["418"],"'setHasError' is assigned a value but never used.","'setMsg' is assigned a value but never used.","'driveIcon' is defined but never used.","'activeTab' is assigned a value but never used.","'setActiveTab' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'getImgData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["419"],"ArrowFunctionExpression","expectedInside","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has a missing dependency: 'mongo'. Either include it or remove the dependency array.",["420"],"React Hook useEffect has a missing dependency: 'getInfluencer'. Either include it or remove the dependency array.",["421"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["422"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","Array.prototype.filter() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","Array.prototype.map() expects a value to be returned at the end of arrow function.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","'credentials' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'checkToken'. Either include it or remove the dependency array.",["423"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'getComments'. Either include it or remove the dependency array.",["424"],"'maxAgeTest' is assigned a value but never used.","'testSubmit' is assigned a value but never used.","'decoded' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["425"],["426"],"no-const-assign","'collectionUser' is constant.","const","React Hook useEffect has missing dependencies: 'props.profileUser.profileCover', 'props.profileUser.profilePic', and 'userObj'. Either include them or remove the dependency array. If 'setCurrentBioPic' needs the current value of 'props.profileUser.profilePic', you can also switch to useReducer instead of useState and read 'props.profileUser.profilePic' in the reducer.",["427"],"'mongo' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'authUser' is defined but never used.","'uid' is assigned a value but never used.","'setLoginMsg' is assigned a value but never used.","'appConfig' is assigned a value but never used.","'maxAge' is assigned a value but never used.","'createToken' is assigned a value but never used.","'closeWindow' is assigned a value but never used.","'getApp' is assigned a value but never used.","'Container' is defined but never used.","React Hook useEffect has a missing dependency: 'loginCheck'. Either include it or remove the dependency array.",["428"],"'oldArr' is constant.",["429"],"'useCallback' is defined but never used.","'isFanOf' is assigned a value but never used.","'setIsFanOf' is assigned a value but never used.","'handleBecomeAFan' is assigned a value but never used.","'mapDispatchToProps' is assigned a value but never used.",["430"],["431"],"'Realm' is defined but never used.","'useEffect' is defined but never used.","'Helmet' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'videoData' is assigned a value but never used.","'setVideoData' is assigned a value but never used.","'handleVideoSearch' is assigned a value but never used.","'Pagination' is defined but never used.","'white1X1' is defined but never used.","'setActivePag' is assigned a value but never used.","'message' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"432","fix":"433"},{"desc":"434","fix":"435"},{"desc":"436","fix":"437"},{"desc":"438","fix":"439"},{"desc":"440","fix":"441"},{"desc":"442","fix":"443"},{"desc":"444","fix":"445"},{"desc":"446","fix":"447"},{"desc":"448","fix":"449"},{"desc":"450","fix":"451"},{"desc":"452","fix":"453"},{"desc":"454","fix":"455"},{"desc":"452","fix":"456"},{"desc":"442","fix":"457"},{"desc":"442","fix":"458"},"Update the dependencies array to be: [getInfluencers]",{"range":"459","text":"460"},"Update the dependencies array to be: [confirmUser]",{"range":"461","text":"462"},"Update the dependencies array to be: [fetchData]",{"range":"463","text":"464"},"Update the dependencies array to be: [mongo]",{"range":"465","text":"466"},"Update the dependencies array to be: [getInfluencer]",{"range":"467","text":"468"},"Update the dependencies array to be: [getData]",{"range":"469","text":"470"},"Update the dependencies array to be: [checkToken]",{"range":"471","text":"472"},"Update the dependencies array to be: [getComments]",{"range":"473","text":"474"},"Update the dependencies array to be: [props, props.isLoggedIn]",{"range":"475","text":"476"},"Update the dependencies array to be: [props]",{"range":"477","text":"478"},"Update the dependencies array to be: [props.profileUser.profileCover, props.profileUser.profilePic, userObj]",{"range":"479","text":"480"},"Update the dependencies array to be: [loginCheck]",{"range":"481","text":"482"},{"range":"483","text":"480"},{"range":"484","text":"470"},{"range":"485","text":"470"},[2397,2399],"[getInfluencers]",[5212,5214],"[confirmUser]",[1999,2001],"[fetchData]",[3851,3853],"[mongo]",[3912,3914],"[getInfluencer]",[9999,10001],"[getData]",[6702,6704],"[checkToken]",[7481,7483],"[getComments]",[2026,2044],"[props, props.isLoggedIn]",[2632,2634],"[props]",[16100,16102],"[props.profileUser.profileCover, props.profileUser.profilePic, userObj]",[10057,10059],"[loginCheck]",[15797,15799],[1650,1652],[1795,1797]]